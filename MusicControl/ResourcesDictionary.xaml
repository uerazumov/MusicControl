<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:MusicControl">
    <ImageBrush x:Key="BackgroundImage" ImageSource="/MusicControl;component/VisualResources/BackgroundImage.png"></ImageBrush>
    <ImageBrush x:Key="playButton" ImageSource="/MusicControl;component/VisualResources/playButton.png"></ImageBrush>
    <ImageBrush x:Key="stopButton" ImageSource="/MusicControl;component/VisualResources/stopButton.png"></ImageBrush>
    <ImageBrush x:Key="pauseButton" ImageSource="/MusicControl;component/VisualResources/pauseButton.png"></ImageBrush>
    <ImageBrush x:Key="mainMenuButton" ImageSource="/MusicControl;component/VisualResources/mainMenuButton.png"></ImageBrush>
    <ImageBrush x:Key="addNewClientButton" ImageSource="/MusicControl;component/VisualResources/plusButton.png"></ImageBrush>
    <ImageBrush x:Key="editClientButton" ImageSource="/MusicControl;component/VisualResources/editButton.png"></ImageBrush>
    <ImageBrush x:Key="updateButton" ImageSource="/MusicControl;component/VisualResources/updateButton.png"></ImageBrush>
    <ImageBrush x:Key="applyButton" ImageSource="/MusicControl;component/VisualResources/applyButton.png"></ImageBrush>
    <ImageBrush x:Key="cancelButton" ImageSource="/MusicControl;component/VisualResources/cancelButton.png"></ImageBrush>
    <ImageBrush x:Key="saveButton" ImageSource="/MusicControl;component/VisualResources/saveButton.png"></ImageBrush>
    <ImageBrush x:Key="removeButton" ImageSource="/MusicControl;component/VisualResources/removeButton.png"></ImageBrush>
    <Style x:Key="MainMenuButtonStyle" TargetType="Button">
        <Setter Property="Margin" Value="10,10,10,10"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Width" Value="50"></Setter>
        <Setter Property="Height" Value="50"></Setter>
    </Style>
    <Style x:Key="HeadlineTextStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="48"></Setter>
        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
        <Setter Property="TextElement.FontFamily" Value="/MusicControl;component/VisualResources/#FRABK"></Setter>
        <Setter Property="Foreground" Value="White"/>
    </Style>
    <Style x:Key="SessionButtonStyle" TargetType="Button">
        <Setter Property="Margin" Value="10,10,10,10"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Width" Value="100"></Setter>
        <Setter Property="Height" Value="100"></Setter>
    </Style>
    <Style x:Key="ButtonStyle" TargetType="Button">
        <Setter Property="MaxWidth" Value="750"></Setter>
        <Setter Property="MaxHeight" Value="300"></Setter>
        <Setter Property="Margin" Value="5,5,5,5"></Setter>
        <Setter Property="FontSize" Value="50"></Setter>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="TextElement.FontFamily" Value="/MusicControl;component/VisualResources/#FRABK"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border>
                        <Border.Style>
                            <Style>
                                <Setter Property="Border.Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="/MusicControl;component/VisualResources/button.png"></ImageBrush>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="Border.IsMouseOver" Value="True">
                                        <Setter Property="Border.Background">
                                            <Setter.Value>
                                                <ImageBrush ImageSource="/MusicControl;component/VisualResources/buttonActive.png"></ImageBrush>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                    <Trigger Property="Border.IsEnabled" Value="False">
                                        <Setter Property="Border.Background">
                                            <Setter.Value>
                                                <ImageBrush ImageSource="/MusicControl;component/VisualResources/buttonDisabled.png"></ImageBrush>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TextBlockStyle" TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="TextElement.FontFamily" Value="/MusicControl;component/VisualResources/#FRABK"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>
    <Style x:Key="TextBlockBorderStyle" TargetType="Border">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="#EE1919" Offset="0"></GradientStop>
                    <GradientStop Color="#090101" Offset="0.9"></GradientStop>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="CornerRadius" Value="20"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="#A1A1A1"/>
    </Style>

    <Style x:Key="TexBoxStyle" TargetType="TextBox">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="FontFamily" Value="/MusicControl;component/VisualResources/#FRABK"/>
        <!--<Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <DockPanel>
                        <AdornedElementPlaceholder x:Name="controlWithError"/>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>-->
    </Style>

    <Style x:Key="ClientTextBoxStyle" TargetType="TextBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Border Style="{StaticResource TextBlockBorderStyle}"/>
                        <TextBox x:Name="InteriorTextBox" Style="{StaticResource TexBoxStyle}" Margin="0">
                            <TextBox.Text>
                                <Binding Path="Text" RelativeSource="{RelativeSource TemplatedParent}"/>
                            </TextBox.Text>
                        </TextBox>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--<Setter Property="Text">
            <Setter.Value>
                <Binding Path="Text" Mode="TwoWay" RelativeSource="{RelativeSource TemplatedParent}">
                    <Binding.ValidationRules>
                        <local:ClientNameValidationRule/>
                    </Binding.ValidationRules>
                </Binding>
            </Setter.Value>
        </Setter>-->
    </Style>

    <Style x:Key="TimeTextBoxStyle" TargetType="TextBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Border Style="{StaticResource TextBlockBorderStyle}"/>
                        <TextBox x:Name="InteriorTextBox" Style="{StaticResource TexBoxStyle}" Margin="0">
                            <TextBox.Text>
                                <Binding Path="Text" RelativeSource="{RelativeSource TemplatedParent}"/>
                            </TextBox.Text>
                        </TextBox>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--<Setter Property="Text">
            <Setter.Value>
                <Binding Path="Text" Mode="TwoWay" RelativeSource="{RelativeSource TemplatedParent}" >
                    <Binding.ValidationRules>
                        <local:TimeValidationRule/>
                    </Binding.ValidationRules>
                </Binding>
            </Setter.Value>
        </Setter>-->
    </Style>



    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Border CornerRadius="20" BorderThickness="3" BorderBrush="#A1A1A1">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="50" />
                </Grid.ColumnDefinitions>
                <Border
                    x:Name="Border" 
                    Grid.ColumnSpan="2"
                    CornerRadius="18">
                    <Border.Background>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <GradientStop Color="#EE1919" Offset="0"></GradientStop>
                            <GradientStop Color="#090101" Offset="0.9"></GradientStop>
                        </LinearGradientBrush>
                    </Border.Background>
                </Border>
                <Border 
                    Grid.Column="0"
                    CornerRadius="19" 
                    BorderThickness="0,0,1,0">
                    <Border.Background>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <GradientStop Color="#EE1919" Offset="0"></GradientStop>
                            <GradientStop Color="#090101" Offset="0.9"></GradientStop>
                        </LinearGradientBrush>
                    </Border.Background>
                </Border>
                <Path
                    x:Name="Arrow"
                    Grid.Column="1"     
                    Fill="#EACCCC"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Margin="0,0,10,0"
                    Grid.ColumnSpan="2"
                    Data="M0,0 L0,4 L8,12 L16,4 L16,0 L8,8 z"
                    />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <GradientStop Color="#FF6060" Offset="0"></GradientStop>
                            <GradientStop Color="#000000" Offset="0.9"></GradientStop>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <GradientStop Color="#FF5235" Offset="0"></GradientStop>
                            <GradientStop Color="#000000" Offset="0.9"></GradientStop>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <GradientStop Color="#5B5B5B" Offset="0"></GradientStop>
                            <GradientStop Color="#000000" Offset="0.9"></GradientStop>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                <Setter Property="Foreground" Value="#888888"/>
                <Setter TargetName="Arrow" Property="Fill" Value="#888888" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>

    <!-- SimpleStyles: ComboBoxItem -->
    <Style x:Key="ComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Border"
                Padding="2"
                SnapsToDevicePixels="true"
                Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="Tomato"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
                <!--<ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Name="Border"
                              Padding="2"
                              SnapsToDevicePixels="true"
                              CornerRadius="20">
                        <ContentPresenter Margin="2" IsHitTestVisible="False" VerticalAlignment="Center" HorizontalAlignment="Stretch"
                                          Name="ContentSite"
                                          ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                                          Content="{TemplateBinding ComboBox.SelectionBoxItem}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#FF4F4F4F"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>-->
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemStyle}"/>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="TextElement.FontFamily" Value="/MusicControl;component/VisualResources/#FRABK"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton
                            Name="ToggleButton"
                            Template="{StaticResource ComboBoxToggleButton}"
                            Grid.Column="2"
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="23,0,23,0"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}" 
                            Template="{StaticResource ComboBoxTextBox}" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Margin="30,3,23,3"
                            Focusable="True" 
                            Background="Transparent"
                            Foreground="White"
                            Visibility="Visible"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">
                            <Grid Name="DropDown"
                              SnapsToDevicePixels="True"                
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border 
                                x:Name="DropDownBorder"
                                BorderThickness="2"
                                BorderBrush="#A1A1A1">
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <GradientStop Color="#EE1919" Offset="0"></GradientStop>
                                            <GradientStop Color="#000000" Offset="0.9"></GradientStop>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                                <ScrollViewer Margin="30,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#E1E1E1"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="15"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--<Style.Triggers>
            <Trigger Property="SelectedItem" Value="{x:Null}">
                <Setter Property="SelectedIndex" Value="0" />
            </Trigger>
        </Style.Triggers>-->
    </Style>

    <!--<Style x:Key="CalendarDayButtonStyle" TargetType="{x:Type CalendarDayButton}">
        <Setter Property="Foreground" Value="White"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Converter={StaticResource CustomLetterDayConverter}}" Value="{x:Null}">
                <Setter Property="Background" Value="Tomato"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>-->

    <Style x:Key="CalendarDayButtonStyle" TargetType="{x:Type CalendarDayButton}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Converter={StaticResource CustomLetterDayConverter}}" Value="{x:Null}">
                <Setter Property="Background" Value="Tomato"></Setter>
            </DataTrigger>
        </Style.Triggers>
        <!--<Setter Property="TextElement.FontFamily" Value="/MusicControl;component/VisualResources/#FRABK"/>-->
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="MinWidth" Value="20" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CalendarDayButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HighlightBackground"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0.5"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HighlightBackground"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0.5"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HighlightBackground"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0"
                                                         Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="NormalText"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To=".35"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="SelectionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Unselected" />
                                <VisualState Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBackground"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To=".75"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="CalendarButtonFocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="CalendarButtonFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DayButtonFocusVisual"
                                                                       Storyboard.TargetProperty="Visibility"
                                                                       Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="CalendarButtonUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DayButtonFocusVisual"
                                                                       Storyboard.TargetProperty="Visibility"
                                                                       Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="ActiveStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Active" />
                                <VisualState Name="Inactive">
                                    <Storyboard>
                                        <ColorAnimation Duration="0"
                                                        Storyboard.TargetName="NormalText"
                                                        Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                                        To="Gray" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="DayStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="RegularDay" />
                                <VisualState Name="Today">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="TodayBackground"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0" />
                                        <ColorAnimation Duration="0"
                                                        Storyboard.TargetName="NormalText"
                                                        Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                                        To="White" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="BlackoutDayStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="NormalDay" />
                                <VisualState Name="BlackoutDay">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="Blackout"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To=".2" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="TodayBackground"
                                   RadiusX="1"
                                   RadiusY="1"
                                   Opacity="0">
                            <Rectangle.Fill>
                                <SolidColorBrush Color="Gray" />
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle x:Name="SelectedBackground"
                                   RadiusX="1"
                                   RadiusY="1"
                                   Opacity="0">
                            <Rectangle.Fill>
                                <SolidColorBrush Color="LightGray" />
                            </Rectangle.Fill>
                        </Rectangle>
                        <Border Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}" />
                        <Rectangle x:Name="HighlightBackground" RadiusX="1" RadiusY="1" Opacity="0">
                            <Rectangle.Fill>
                                <SolidColorBrush Color="LightPink" />
                            </Rectangle.Fill>
                        </Rectangle>
                        <ContentPresenter x:Name="NormalText" TextElement.FontSize="15" TextElement.FontFamily="/MusicControl;component/VisualResources/#FRABK"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="5,1,5,1">
                            <TextElement.Foreground>
                                <SolidColorBrush Color="White" />
                            </TextElement.Foreground>
                        </ContentPresenter>
                        <Path x:Name="Blackout" Opacity="0" Margin="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                              RenderTransformOrigin="0.5,0.5"
                              Fill="#FF000000"
                              Stretch="Fill"
                              Data="M8.1772461,11.029181 L10.433105,
                                11.029181 L11.700684,12.801641 L12.973633,
                                11.029181 L15.191895,11.029181 L12.844727,
                                13.999395 L15.21875,17.060919 L12.962891,
                                17.060919 L11.673828,15.256231 L10.352539,
                                17.060919 L8.1396484,17.060919 L10.519043,
                                14.042364 z" />
                        <Rectangle x:Name="DayButtonFocusVisual"
                                   Visibility="Collapsed"
                                   IsHitTestVisible="false"
                                   RadiusX="1"
                                   RadiusY="1">
                            <Rectangle.Stroke>
                                <SolidColorBrush Color="Gray" />
                            </Rectangle.Stroke>
                        </Rectangle>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Color x:Key="SelectedBackgroundColor">Gray</Color>
    <Color x:Key="ControlMediumColor">LightGray</Color>

    <Style TargetType="CalendarButton" x:Key="CalendarButtonStyle">
        <Setter Property="MinWidth" Value="40" />
        <Setter Property="MinHeight" Value="42" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CalendarButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Background"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To=".5"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Background"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To=".5"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="SelectionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Unselected" />
                                <VisualState Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBackground"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To=".75"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="ActiveStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Active" />
                                <VisualState Name="Inactive">
                                    <Storyboard>
                                        <ColorAnimation Duration="0"
                                                        Storyboard.TargetName="NormalText"
                                                        Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                                        To="White" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="CalendarButtonFocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="CalendarButtonFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                 Storyboard.TargetName="CalendarButtonFocusVisual"
                                                 Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="CalendarButtonUnfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="SelectedBackground"
                                   RadiusX="1"
                                   RadiusY="1"
                                   Opacity="0">
                            <Rectangle.Fill>
                                <SolidColorBrush Color="{DynamicResource SelectedBackgroundColor}" />
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle x:Name="Background"
                                   RadiusX="1"
                                   RadiusY="1"
                                   Opacity="0">
                            <Rectangle.Fill>
                                <SolidColorBrush Color="{DynamicResource SelectedBackgroundColor}" />
                            </Rectangle.Fill>
                        </Rectangle>
                        <ContentPresenter x:Name="NormalText" TextElement.FontSize="18" TextElement.FontFamily="/MusicControl;component/VisualResources/#FRABK"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="1,0,1,1">
                            <TextElement.Foreground>
                                <SolidColorBrush Color="White" />
                            </TextElement.Foreground>
                        </ContentPresenter>
                        <Rectangle x:Name="CalendarButtonFocusVisual"
                                   Visibility="Collapsed"
                                   IsHitTestVisible="false"
                                   RadiusX="1"
                                   RadiusY="1">
                            <Rectangle.Stroke>
                                <SolidColorBrush Color="{DynamicResource SelectedBackgroundColor}" />
                            </Rectangle.Stroke>
                        </Rectangle>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource ControlMediumColor}" />
            </Setter.Value>
        </Setter>
    </Style>

    <Color x:Key="GlyphColor">White</Color>

    <ControlTemplate x:Key="HeaderButtonTemplate" TargetType="{x:Type Button}">
        <Grid Cursor="Hand">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimation Duration="0"
                                            To="{DynamicResource GlyphColor}"
                                            Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                            Storyboard.TargetName="buttonContent" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             To=".5"
                                             Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="buttonContent" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ContentPresenter x:Name="buttonContent" TextElement.FontSize="16" TextElement.FontFamily="/MusicControl;component/VisualResources/#FRABK"
                              Margin="1,4,1,9"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              Content="{TemplateBinding Content}"
                              TextElement.Foreground="White"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Grid>
    </ControlTemplate>

    <!--Button to go to the previous month or year.-->
    <ControlTemplate x:Key="PreviousButtonTemplate" TargetType="{x:Type Button}">
        <Grid Cursor="Hand">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimation Duration="0"
                                            To="{DynamicResource GlyphColor}"
                                            Storyboard.TargetName="path"
                                            Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             To=".5"
                                             Storyboard.TargetProperty="(Shape.Fill).(Brush.Opacity)"
                                             Storyboard.TargetName="path" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <!--<Rectangle Fill="Transparent" Opacity="1" Stretch="Fill"/>-->
            <Grid  Background="Transparent">
                <Path x:Name="path"
                      Margin="14,-6,0,0"
                      Stretch="Fill"
                      HorizontalAlignment="Left"
                      Height="10"
                      VerticalAlignment="Center"
                      Width="6"
                      Data="M288.75,232.25 L288.75,240.625 L283,236.625 z">
                    <Path.Fill>
                        <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                    </Path.Fill>
                </Path>
            </Grid>
        </Grid>
    </ControlTemplate>


    
    <!--Button to go to the next month or year.-->
    <ControlTemplate x:Key="NextButtonTemplate"
                 TargetType="{x:Type Button}">
        <Grid Cursor="Hand">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimation Duration="0"
                                            To="{StaticResource GlyphColor}"
                                            Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                            Storyboard.TargetName="path" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             To=".5"
                                             Storyboard.TargetProperty="(Shape.Fill).(Brush.Opacity)"
                                             Storyboard.TargetName="path" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <!--<Rectangle Fill="#11E5EBF1" Opacity="1" Stretch="Fill"/>-->
            <Grid Background="Transparent">
                <Path x:Name="path"
                      Data="M282.875,231.875 L282.875,240.375 L288.625,236 z"
                      HorizontalAlignment="Right"
                      Height="10"
                      Margin="0,-6,14,0"
                      Stretch="Fill"
                      VerticalAlignment="Center"
                      Width="6">
                    <Path.Fill>
                        <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                    </Path.Fill>
                </Path>
            </Grid>
        </Grid>
    </ControlTemplate>

    <Style x:Key="CalendarItemStyle" TargetType="{x:Type CalendarItem}">
        <Setter Property="Margin"
          Value="0,3,0,3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CalendarItem}">
                    <ControlTemplate.Resources>
                        <DataTemplate x:Key="{x:Static CalendarItem.DayTitleTemplateResourceKey}">
                            <TextBlock Foreground="White" TextElement.FontSize="15" TextElement.FontFamily="/MusicControl;component/VisualResources/#FRABK"
                                       FontWeight="Bold"
                                       FontSize="9.5"
                                       Margin="0,6,0,6"
                                       Text="{Binding}"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center" />
                        </DataTemplate>
                    </ControlTemplate.Resources>
                    <Grid x:Name="PART_Root">
                        <Grid.Resources>
                            <SolidColorBrush x:Key="DisabledColor" Color="#A5FFFFFF" />
                        </Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="PART_DisabledVisual" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="1">
                            <Border BorderBrush="#FFFFFFFF"
                                    BorderThickness="2"
                                    CornerRadius="1">
                                <Grid>
                                    <Grid.Resources>
                                    </Grid.Resources>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Button x:Name="PART_PreviousButton"
                                            Template="{StaticResource PreviousButtonTemplate}"
                                            Focusable="False"
                                            HorizontalAlignment="Left"
                                            Grid.Column="0"
                                            Grid.Row="0"
                                            Height="20"
                                            Width="28" />
                                    <Button x:Name="PART_HeaderButton"
                                            FontWeight="Bold"
                                            Focusable="False"
                                            FontSize="10.5"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Grid.Column="1"
                                            Grid.Row="0"
                                            Template="{StaticResource HeaderButtonTemplate}" />
                                    <Button x:Name="PART_NextButton"
                                            Focusable="False"
                                            HorizontalAlignment="Right"
                                            Grid.Column="2"
                                            Grid.Row="0"
                                            Template="{StaticResource NextButtonTemplate}"
                                            Height="20"
                                            Width="28" />
                                    <Grid x:Name="PART_MonthView"
                                          Visibility="Visible"
                                          Grid.ColumnSpan="3"
                                          Grid.Row="1"
                                          Margin="6,-1,6,6"
                                          HorizontalAlignment="Center">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" MinWidth="30"/>
                                            <ColumnDefinition Width="Auto" MinWidth="30"/>
                                            <ColumnDefinition Width="Auto" MinWidth="30"/>
                                            <ColumnDefinition Width="Auto" MinWidth="30"/>
                                            <ColumnDefinition Width="Auto" MinWidth="30"/>
                                            <ColumnDefinition Width="Auto" MinWidth="30"/>
                                            <ColumnDefinition Width="Auto" MinWidth="30"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" MinHeight="30"/>
                                            <RowDefinition Height="Auto" MinHeight="30"/>
                                            <RowDefinition Height="Auto" MinHeight="30"/>
                                            <RowDefinition Height="Auto" MinHeight="30"/>
                                            <RowDefinition Height="Auto" MinHeight="30"/>
                                            <RowDefinition Height="Auto" MinHeight="30"/>
                                            <RowDefinition Height="Auto" MinHeight="30"/>
                                        </Grid.RowDefinitions>
                                    </Grid>
                                    <Grid x:Name="PART_YearView"
                                          Visibility="Hidden"
                                          Grid.ColumnSpan="3"
                                          Grid.Row="1"
                                          HorizontalAlignment="Center"
                                          Margin="6,-3,7,6">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" MinWidth="50"/>
                                            <ColumnDefinition Width="Auto" MinWidth="50"/>
                                            <ColumnDefinition Width="Auto" MinWidth="50"/>
                                            <ColumnDefinition Width="Auto" MinWidth="50"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" MinHeight="60"/>
                                            <RowDefinition Height="Auto" MinHeight="60"/>
                                            <RowDefinition Height="Auto" MinHeight="60"/>
                                        </Grid.RowDefinitions>
                                    </Grid>
                                </Grid>
                            </Border>
                        </Border>
                        <Rectangle x:Name="PART_DisabledVisual"
                                   Fill="{StaticResource DisabledColor}"
                                   Opacity="0"
                                   RadiusY="2"
                                   RadiusX="2"
                                   Stretch="Fill"
                                   Stroke="{StaticResource DisabledColor}"
                                   StrokeThickness="1"
                                   Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Visibility" TargetName="PART_DisabledVisual" Value="Visible" />
                        </Trigger>
                        <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}" Value="Year">
                            <Setter Property="Visibility"
                                    TargetName="PART_MonthView"
                                    Value="Hidden" />
                            <Setter Property="Visibility"
                                    TargetName="PART_YearView"
                                    Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor,  AncestorType={x:Type Calendar}}}" Value="Decade">
                            <Setter Property="Visibility"
                                    TargetName="PART_MonthView"
                                    Value="Hidden" />
                            <Setter Property="Visibility"
                                    TargetName="PART_YearView"
                                    Value="Visible" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>