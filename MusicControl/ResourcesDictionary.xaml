<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:MusicControl">
    <ImageBrush x:Key="BackgroundImage" ImageSource="/MusicControl;component/VisualResources/BackgroundImage.png"></ImageBrush>
    <ImageBrush x:Key="playButton" ImageSource="/MusicControl;component/VisualResources/playButton.png"></ImageBrush>
    <ImageBrush x:Key="stopButton" ImageSource="/MusicControl;component/VisualResources/stopButton.png"></ImageBrush>
    <ImageBrush x:Key="pauseButton" ImageSource="/MusicControl;component/VisualResources/pauseButton.png"></ImageBrush>
    <ImageBrush x:Key="mainMenuButton" ImageSource="/MusicControl;component/VisualResources/mainMenuButton.png"></ImageBrush>
    <ImageBrush x:Key="addNewClientButton" ImageSource="/MusicControl;component/VisualResources/plusButton.png"></ImageBrush>
    <ImageBrush x:Key="editClientButton" ImageSource="/MusicControl;component/VisualResources/editButton.png"></ImageBrush>
    <ImageBrush x:Key="updateButton" ImageSource="/MusicControl;component/VisualResources/updateButton.png"></ImageBrush>
    <ImageBrush x:Key="textBoxImage" ImageSource="/MusicControl;component/VisualResources/textBox.png"></ImageBrush>
    <ImageBrush x:Key="applyButton" ImageSource="/MusicControl;component/VisualResources/applyButton.png"></ImageBrush>
    <ImageBrush x:Key="cancelButton" ImageSource="/MusicControl;component/VisualResources/cancelButton.png"></ImageBrush>
    <ImageBrush x:Key="saveButton" ImageSource="/MusicControl;component/VisualResources/saveButton.png"></ImageBrush>
    <ImageBrush x:Key="removeButton" ImageSource="/MusicControl;component/VisualResources/removeButton.png"></ImageBrush>
    <Style x:Key="MainMenuButtonStyle" TargetType="Button">
        <Setter Property="Margin" Value="10,10,10,10"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Width" Value="50"></Setter>
        <Setter Property="Height" Value="50"></Setter>
    </Style>
    <Style x:Key="HeadlineTextStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="48"></Setter>
        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
        <Setter Property="TextElement.FontFamily" Value="/MusicControl;component/VisualResources/#FRABK"></Setter>
        <Setter Property="Foreground" Value="White"/>
    </Style>
    <Style x:Key="SessionButtonStyle" TargetType="Button">
        <Setter Property="Margin" Value="10,10,10,10"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Width" Value="100"></Setter>
        <Setter Property="Height" Value="100"></Setter>
    </Style>
    <Style x:Key="ButtonStyle" TargetType="Button">
        <Setter Property="MaxWidth" Value="750"></Setter>
        <Setter Property="MaxHeight" Value="300"></Setter>
        <Setter Property="Margin" Value="5,5,5,5"></Setter>
        <Setter Property="FontSize" Value="50"></Setter>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="TextElement.FontFamily" Value="/MusicControl;component/VisualResources/#FRABK"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border>
                        <Border.Style>
                            <Style>
                                <Setter Property="Border.Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="/MusicControl;component/VisualResources/button.png"></ImageBrush>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="Border.IsMouseOver" Value="True">
                                        <Setter Property="Border.Background">
                                            <Setter.Value>
                                                <ImageBrush ImageSource="/MusicControl;component/VisualResources/buttonActive.png"></ImageBrush>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                    <Trigger Property="Border.IsEnabled" Value="False">
                                        <Setter Property="Border.Background">
                                            <Setter.Value>
                                                <ImageBrush ImageSource="/MusicControl;component/VisualResources/buttonDisabled.png"></ImageBrush>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TextBlockStyle" TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="TextElement.FontFamily" Value="/MusicControl;component/VisualResources/#FRABK"></Setter>
        <Setter Property="Foreground" Value="White"/>
    </Style>
    <Style x:Key="TextBlockBorderStyle" TargetType="Border">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="#EE1919" Offset="0"></GradientStop>
                    <GradientStop Color="#090101" Offset="0.9"></GradientStop>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="CornerRadius" Value="20"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="#A1A1A1"/>
    </Style>



    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Border CornerRadius="20" BorderThickness="3" BorderBrush="#A1A1A1">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="50" />
                </Grid.ColumnDefinitions>
                <Border
                    x:Name="Border" 
                    Grid.ColumnSpan="2"
                    CornerRadius="18">
                    <Border.Background>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <GradientStop Color="#EE1919" Offset="0"></GradientStop>
                            <GradientStop Color="#090101" Offset="0.9"></GradientStop>
                        </LinearGradientBrush>
                    </Border.Background>
                </Border>
                <Border 
                    Grid.Column="0"
                    CornerRadius="19" 
                    BorderThickness="0,0,1,0">
                    <Border.Background>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <GradientStop Color="#EE1919" Offset="0"></GradientStop>
                            <GradientStop Color="#090101" Offset="0.9"></GradientStop>
                        </LinearGradientBrush>
                    </Border.Background>
                </Border>
                <Path
                    x:Name="Arrow"
                    Grid.Column="1"     
                    Fill="#EACCCC"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Margin="0,0,10,0"
                    Grid.ColumnSpan="2"
                    Data="M0,0 L0,4 L8,12 L16,4 L16,0 L8,8 z"
                    />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <GradientStop Color="#FF6060" Offset="0"></GradientStop>
                            <GradientStop Color="#000000" Offset="0.9"></GradientStop>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <GradientStop Color="#FF5235" Offset="0"></GradientStop>
                            <GradientStop Color="#000000" Offset="0.9"></GradientStop>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <GradientStop Color="#5B5B5B" Offset="0"></GradientStop>
                            <GradientStop Color="#000000" Offset="0.9"></GradientStop>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                <Setter Property="Foreground" Value="#888888"/>
                <Setter TargetName="Arrow" Property="Fill" Value="#888888" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="TextElement.FontFamily" Value="/MusicControl;component/VisualResources/#FRABK"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton
                            Name="ToggleButton"
                            Template="{StaticResource ComboBoxToggleButton}"
                            Grid.Column="2"
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="23,0,23,0"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                        <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">
                            <Grid Name="DropDown"
                              SnapsToDevicePixels="True"                
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border 
                                x:Name="DropDownBorder"
                                BorderThickness="2"
                                BorderBrush="#A1A1A1">
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <GradientStop Color="#EE1919" Offset="0"></GradientStop>
                                            <GradientStop Color="#000000" Offset="0.9"></GradientStop>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#E1E1E1"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="15"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--<Style.Triggers>
            <Trigger Property="SelectedItem" Value="{x:Null}">
                <Setter Property="SelectedIndex" Value="0" />
            </Trigger>
        </Style.Triggers>-->
    </Style>

    <!-- SimpleStyles: ComboBoxItem -->
    <Style x:Key="ComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Name="Border"
                              Padding="2"
                              SnapsToDevicePixels="true"
                              CornerRadius="20">
                        <ContentPresenter Margin="2" IsHitTestVisible="False" VerticalAlignment="Center" HorizontalAlignment="Stretch"
                                          Name="ContentSite"
                                          ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                                          Content="{TemplateBinding ComboBox.SelectionBoxItem}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#FF4F4F4F"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="CalendarDayButtonStyle" TargetType="{x:Type CalendarDayButton}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Converter={StaticResource CustomLetterDayConverter}}" Value="{x:Null}">
                <Setter Property="Background" Value="DarkRed"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>